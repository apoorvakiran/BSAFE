apiVersion: v1
kind: ConfigMap
metadata:
  name: safe-core-config
  namespace: ${PROD_NAMESPACE}
  labels:
    app: safe-core
data:
  ENVIRONMENT: production
  SENTRY_DSN: ${SENTRY_DSN}
  BROKER_URL: safe-core-prod.vkpnka.clustercfg.use1.cache.amazonaws.com:6379

---

apiVersion: v1
kind: Service
metadata:
  name: safe-core
  namespace: ${PROD_NAMESPACE}
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: safe-core

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: safe-core
  namespace: ${PROD_NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: nginx-iteratelabs
    certmanager.k8s.io/cluster-issuer: letsencrypt
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: aws-route53
spec:
  tls:
  - hosts:
    - analytics.iteratelabs.co
    secretName: analytics.iteratelabs.co-tls
  rules:
  - host: analytics.iteratelabs.co
    http:
      paths:
        - path: /
          backend:
            serviceName: safe-core
            servicePort: 5000

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: safe-core
  namespace: ${PROD_NAMESPACE}
  labels:
    app: safe-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: safe-core
  template:
    metadata:
      labels:
        app: safe-core
    spec:
      containers:
      - name: safe-core
        image: ${AWS_REPOSITORY_URL}/${REPOSITORY_NAME}:${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}
        ports:
          - containerPort: 5000
        command: ["/bin/sh", "-c"]
        args: ["foreman s"]
        envFrom:
          - configMapRef:
              name: safe-core-config

