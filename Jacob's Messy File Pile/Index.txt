OVERALL
$$$I do not seem to have the hits calculator. Check laptop?
$$$Also need to pull the different quadrant correction stuff off of my laptop.
$$$There are two folders here, Data and scratches. Data tends to be better written, scratches is mostly scripts and things that eventually became objects in Data.
$$$Things which are denoted with @@@ are tasks I need to complete.
@@@@Remove unnecessary files, finish all tasks to complete, and push updated platform



Data

----This folder holds the majority of the actually fleshed out classes



######
avatar.py
"""
Creates an avatar which presents a worker performing a task.
Will take information on angles and frequencies of motions in... some format
Creates a dummy dataset representing a worker performing within that range of motions.
"""

So this file looks like one that Jesper probably made, but I can't say for sure. It isn't as well documented as most of his stuff tends to be.
I do know I did something akin to what this file does, and I believe I used this as a jumping off point, to mimic a very eratic worker for a high-value strain score.
######

data.py

I don't touch this. It loads data into arrays for processing in experiments. It works, seems straight forward, and I've never needed to make any changes to it. One of Jesper's files.

######

events.py < ---- NOW RENAMED metrics.py

This class is very poorly named. I was initially intending to have it process cycles and hits, but in the course of doing that I wound up writing a class that stores Metrics for experiments instead. Incredibly useful, but I need to rename this and integrate it back in with a name that makes sense

COMPLETE @@@Rename events.py since it no longer has anything to do with events Check
COMPLETE @@@Ask Jesper why he turned this off in the experiment class?
---- Keep separated. Possibly set up a wrapper function that will take an instance of Experiments and create an output csv that includes all of the values we're after
@@@@Write a proper printout function for this that doesn't fail if you lack meta data and that actually calculates all the values you're after, dumbass.
---- Put this into a different function in the way given above!
@@@@Compare to Jesper's metrics.py file written off of this. I believe he just made things work better, but verify that this works with the experiment.py file herein.
COMPLETE @@@@@Go to the events.py file and make sure Posture is fully calculated!!!!  <---- taken from perdue script.py index notes.
----Also calculating Total, speed normalized, speed score, and taking in the name used for output. (exp.name.replace("_",','))
----Removed the events and eventfinder functions from the new metrics.py file.
    

######

experiment.py

Two major classes in here, Experiments and Experiment. Experiments can be called to take a structured folder of data files, load them in, process them, and create a pkl file that we can use to call them up later for analysis. Experiment objects are single instances, and are TYPICALLY generated by the Experiments type. This is where a lot of the pre-processing happens, including quadrant correction and trimming off areas of inactivity from the start and end of a shift.

@@@We really should rename this already. Also, should we consider the merits in going from DAY in the structure to DATE?
@@@@@Figure out why Jesper turned off events in the Experiment class.
@@@@@What else did Jesper change? Why doesn't this seem to work properly on my computer?


######

Jacob Scripting for Graphs.py

This I don't think is important anymore, generated figures earlier on before looker dashboard was set up.


######

results.py

This file is no longer necessary, it has been replaced by the events.py Metrics class 

@@@Rename events.py since it no longer has anything to do with events


######

-----

scratches

Scripts I've thrown together for actually running the analyses. 

######

Kaiser go 1.py

Creates an experiment for the kaiser aluminum data file we have. Basically just defines the file location and then makes the experiment.

@@@Useless for future coding

######

meat_cycle.py 

So this was an early attempt at parsing out membrane skinner cycles. Everything before line 145 was trying to synch two hands together by time stamp, which turned out to be a fools errand anyway. From 145 afterwards this broke down an experiment into second periods and pulled out features from each second. The goal was to try and parse out a pattern of seconds using PCA or other transformations. This ultimately failed, but may be useful to look in to for later attempts.

######

meat_grabber.py

So first half has three functions, eventfinder, rangefinder, and contwork. 
Eventfinder tries to find periods of time where one or more values are all over a threshold angle continuously.
Rangefinder goes through in 2 minute chunks and tries to determine if that chunk was a break or work period.
contwork takes results from Rangefinder and removes breaks from values being looked at.

@@@I don't think this half is useful but keeping it in the backlog somewhere!
@@@Line 28, while n < maxSize, what the hell kind of while loop is this? Is this just not defined? This should probably be just the length of the arrays for pitch/yaw/roll?

The second half is a function that takes a list of yaw values and evaluates how many times a worker performing the Membrane Skinner task reaches over to grab a hunk of meat per two minute chunk of time during their shift. 

######

meatcycle.py 

This file is empty

######

Motion By Posture.py

This is just a script that looked at strain scores and posture together for different tasks at Tyson
Not super interesting or useful.

######

onesec.py

Turns an experiment into a list of features derived from single seconds of data. Idea was to try and evaluate each second and look for clustering on different subtask portions. I think this failed? In retrospect I think breaking this down into smaller time sections would possibly make sense, as well as including features derived from n and n-1 changes.

######

perdue script.py

This script evaluated the Perdue data into an experiments object, complete with Metrics calculated for each. It also contains a function, Printer, which creates the output file from an Experiments object.

@@@Printer is good. Update that and put it somewhere else
@@@@Needs to fully calculate the total score, do the normalized speed scores, and ensure the posture score included is correct.
@@@@@Go to the events.py file and make sure Posture is fully calculated!!!!

######

scratch.py

Includes several outdated functions or functions that have been consolidated into objects elsewhere. Also seems to include a prototype of the Metrics class, as seen in events.py. Also has some sub-task analysis using values from Apoorva to dissect Tyson jobs into subtasks.

######

scratch_1.py 

Prototype of some score values, and an output function, used for looking at the Borg Warner data specifically.

